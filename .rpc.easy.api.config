generic.class.has.api=true
generic.path=#path
# 接口路径
generic.path[groovy:it.contextType()=="class"]=groovy:```
def ann = it.ann("org.springframework.stereotype.Service", "value")
def path = "/api/" + ann + "/"
logger.info("path:" + path)
return path
```
# 接口方法名
generic.path[groovy:it.contextType()=="method"]=groovy:it.name()

generic.http.method[groovy:it.contextType()=="method"]=groovy:```
(it.argCnt()==0||it.args().every{it.type().isNormalType()})?"GET":null
```
generic.http.method=#method
generic.http.method[#post]=POST
generic.http.method[#POST]=POST
generic.http.method[#get]=GET
generic.http.method[#GET]=GET
# use POST by default
generic.http.method=POST

# 只将public方法生成API
generic.method.has.api=groovy:it.hasModifier("public")

# 参数生成
generic.param.as.json.body=groovy:```
if(it.type().isNormalType()){
    return false
}
if(it.method().hasDoc("GET")||it.method().hasDoc("get")){
    return false
}
def method = it.method().doc("method")
if(method=="GET"||method=="get"){
    return false
}
return true
```
generic.param.as.form.body=false
# log
api.class.parse.before=groovy:logger.info("开始解析类: " + it.name())
api.method.parse.before=groovy:logger.info("开始解析接口: " + it.name())
